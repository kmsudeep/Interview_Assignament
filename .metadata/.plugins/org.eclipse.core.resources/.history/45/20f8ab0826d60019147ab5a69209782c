package com.assignment.pages;

import java.util.List;

import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;

import com.assignment.basetest.TestBase;

public class SeleniumPage extends TestBase{
	
	
	
	
	@FindBy(id="External_links")
	WebElement external_links;
	
	@FindBy(xpath="//td[@title='O, Oxygen']//span[contains(text(),'O')]")
	WebElement click_oxygen_link;
	
	@FindBy(id="searchInput")
	WebElement search_data;
	
	@FindBy(xpath="//ol[@class='references']")
	WebElement link_count;
	
	public SeleniumPage()
	{
		PageFactory.initElements(driver, this);
	}
	
	public String Selenium_Page_Title_Feature()
	{
		return driver.getTitle();
	}
	
	public void External_Link_Feature()
	{
		if(external_links.isDisplayed())
		{
			System.out.println("External_Link is Displayed in the WebPage");
		}
		else
		{
			System.out.println("External_Link is Not - Displayed in the WebPage");
		}
	}
	
	public void Oxygen_Click_Feature()
	{
		click_oxygen_link.click();
		
	}
	
	public String Oxgen_Page_Title_Feature()
	{
		return driver.getTitle();
	}
	
	public void Links_In_Page_Feature()
	{
		int count=0; 
		//System.out.println(link_count.size());
		System.out.println(link_count.getAttribute("innerHTML"));
		/*for(WebElement links : link_count)
		{
			String url=links.getAttribute("href");
			if(url !=null && url.contains(".pdf"))
			{
				System.out.println(url);
				count++;
			}		
		}
		System.out.println("NO of Links with PDF Extention in Reference Sections is --->"+count);*/
	}
	
	public void Search_Data_Feature(String search)
	{
		search_data.sendKeys(search);
		
	}
}
